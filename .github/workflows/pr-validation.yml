name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop ]

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Build application
      run: npm run build
      
    - name: Test Docker build
      run: |
        docker build -t weather-app-test .
        docker run --rm weather-app-test nginx -t
        
    - name: Check bundle size
      run: |
        npm run build
        du -sh dist/
        echo "Bundle size information:"
        find dist/ -name "*.js" -o -name "*.css" | xargs ls -lh
        
    - name: Comment PR with build info
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Get bundle size info
          const { execSync } = require('child_process');
          const bundleSize = execSync('du -sh dist/', { encoding: 'utf-8' }).trim();
          
          const comment = `## üîç Build Validation Results
          
          ‚úÖ TypeScript compilation: **Passed**
          ‚úÖ ESLint checks: **Passed** 
          ‚úÖ Build process: **Passed**
          ‚úÖ Docker build: **Passed**
          
          ### Bundle Information
          üì¶ Total bundle size: \`${bundleSize.split('\t')[0]}\`
          
          The pull request is ready for review! üöÄ`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  lighthouse-audit:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Serve built app
      run: |
        npm install -g serve
        serve -s dist -l 3000 &
        sleep 5
        
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:3000
        configPath: './.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

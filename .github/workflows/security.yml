name: Security Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security checks
    - cron: '0 6 * * 1'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
        
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
      
    - name: Run npm audit
      run: |
        echo "üîç Running npm security audit..."
        npm audit --audit-level=moderate || {
          echo "‚ö†Ô∏è  Security vulnerabilities found. Running npm audit fix..."
          npm audit fix --force || true
          echo "‚úÖ Attempted to fix vulnerabilities"
        }
        
    - name: Check for high/critical vulnerabilities
      run: |
        echo "üîç Checking for high/critical vulnerabilities..."
        npm audit --audit-level=high --json > audit-results.json || true
        
        if [ -s audit-results.json ]; then
          echo "üìä Audit Results:"
          cat audit-results.json | jq '.vulnerabilities | length' || echo "No jq available"
          
          # Check if there are high/critical vulnerabilities
          HIGH_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.high // 0' 2>/dev/null || echo "0")
          CRITICAL_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.critical // 0' 2>/dev/null || echo "0")
          
          if [ "$HIGH_VULNS" != "0" ] || [ "$CRITICAL_VULNS" != "0" ]; then
            echo "‚ùå High or critical vulnerabilities found!"
            echo "High: $HIGH_VULNS, Critical: $CRITICAL_VULNS"
            exit 1
          else
            echo "‚úÖ No high or critical vulnerabilities found"
          fi
        else
          echo "‚úÖ No vulnerabilities found"
        fi
        
    - name: Upload audit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-audit-results
        path: audit-results.json
        retention-days: 30
